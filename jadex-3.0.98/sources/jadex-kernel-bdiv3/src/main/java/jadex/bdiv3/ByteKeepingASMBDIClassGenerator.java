package jadex.bdiv3;

import java.security.ProtectionDomain;
import java.util.HashMap;
import java.util.Map;


/**
 * This class generator keeps generated byte-code as byte[] to be post-processed
 * by other classes. Currently, this is used by compile-time BDI-enhancing with
 * maven/gradle-plugins (for android).
 */
public class ByteKeepingASMBDIClassGenerator extends ASMBDIClassGenerator
{
	/** Map containing all bytes of all classes ever computed **/
	private Map<String, byte[]>	classBytes;

	/** Map containing all classes computed since last clear call **/
	private Map<String, byte[]>	recentClassBytes;

	/**
	 * Constructor.
	 */
	public ByteKeepingASMBDIClassGenerator()
	{
		classBytes = new HashMap<String, byte[]>();
		recentClassBytes = new HashMap<String, byte[]>();
	}

	@Override
	public Class<?> toClass(String name, byte[] data, ClassLoader loader, ProtectionDomain domain)
	{
		Class<?> result = null;
		if(!classBytes.containsKey(name))
		{
			// return null if this class has already been enhanced before to
			// avoid
			// duplicates.
			result = super.toClass(name, data, loader, domain); // maybe this
																// isn't needed?
																// just return
																// null?
			if(result != null)
			{
				classBytes.put(name, data);
				recentClassBytes.put(name, data);
			}
		}
		return result;
	}

	/**
	 * Get the recently generated classes as byte array.
	 * 
	 * @return recently generated classes
	 */
	public Map<String, byte[]> getRecentClassBytes()
	{
		return recentClassBytes;
	}

	/**
	 * Clear the list of recently generated classes.
	 */
	public void clearRecentClassBytes()
	{
		recentClassBytes.clear();
	}


}
