<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>TranslationAgent: Lesson F3.</H3>
	Using the DF to register a service.
	<H4>Explanation</H4>
	This example shows how an agent description
	can be registered at a directory facilitator (DF).
-->
<agent xmlns="http://www.activecomponents.org/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-bdi
	                    http://www.activecomponents.org/jadex-bdi-${jadex_build_version}.xsd"
	name="TranslationF3"
	package="jadex.bdi.tutorial">

	<imports>
		<import>java.util.logging.*</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.bridge.service.search.*</import>
		<import>jadex.bridge.service.types.df.*</import>
	</imports>

	<capabilities>
		<!-- Include the translation capability under the name transcap. -->
		<capability name="transcap" file="jadex.bdi.tutorial.TranslationD1"/>
	</capabilities>
	
	<plans>
	    <plan name="df_keep_registered">
	        <parameter name="description" class="IDFComponentDescription"/>
	        <body class="jadex.bdi.planlib.df.DFKeepRegisteredPlan"/>
	    </plan>
	</plans>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="df_keep_registered">
					<parameter ref="description">
						<value>
							((IDF)SServiceProvider.getLocalService($component.getComponentIdentifier(), IDF.class, RequiredServiceInfo.SCOPE_PLATFORM)).createDFComponentDescription($component.getComponentIdentifier(),
								((IDF)SServiceProvider.getLocalService($component.getComponentIdentifier(), IDF.class, RequiredServiceInfo.SCOPE_PLATFORM))
								.createDFServiceDescription("service_translate", "translate english_german", "University of Hamburg"),
								20000)
 						</value>
					</parameter>
				</initialplan>
			</plans>
		</configuration>
	</configurations>

</agent>

