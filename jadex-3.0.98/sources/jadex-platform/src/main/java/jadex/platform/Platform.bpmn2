<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<semantic:definitions targetNamespace="http://www.activecomponents.org/bpmn/"
                      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
                      xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                      xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                      xmlns:semantic="http://www.omg.org/spec/BPMN/20100524/MODEL"
                      xmlns:jadex="http://www.activecomponents.org/bpmnextensions"
                      xmlns:jadexvisual="http://www.activecomponents.org/bpmnvisualextensions">
  <semantic:extension>
    <jadex:modelname>Platform</jadex:modelname>
    <jadex:description>The platform in BPMN.</jadex:description>
    <jadex:package>jadex.platform</jadex:package>
    <jadex:componentflags suspend="false" master="false" daemon="false" autoshutdown="false" monitoring="OFF" synchronous="false" keepalive="true"/>
    <jadex:imports>
      <jadex:import>jadex.commons.*</jadex:import>
      <jadex:import>jadex.commons.concurrent.*</jadex:import>
      <jadex:import>jadex.commons.future.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.threadpool.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.execution.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.library.*</jadex:import>
      <jadex:import>jadex.platform.service.remote.*</jadex:import>
      <jadex:import>jadex.platform.service.settings.*</jadex:import>
      <jadex:import>jadex.bridge.service.clock.*</jadex:import>
      <jadex:import>jadex.platform.service.message.*</jadex:import>
      <jadex:import>jadex.platform.service.message.transport.*</jadex:import>
      <jadex:import>jadex.platform.service.message.transport.localmtp.*</jadex:import>
      <jadex:import>jadex.platform.service.message.transport.niotcpmtp.*</jadex:import>
      <jadex:import>jadex.bridge.*</jadex:import>
      <jadex:import>jadex.bridge.fipa.*</jadex:import>
      <jadex:import>jadex.platform.service.message.transport.codecs.*</jadex:import>
      <jadex:import>jadex.platform.service.cms.*</jadex:import>
      <jadex:import>jadex.platform.service.simulation.*</jadex:import>
      <jadex:import>jadex.component.*</jadex:import>
      <jadex:import>jadex.platform.service.deployment.*</jadex:import>
      <jadex:import>jadex.micro.*</jadex:import>
      <jadex:import>jadex.standalone.*</jadex:import>
      <jadex:import>java.util.logging.Level</jadex:import>
      <jadex:import>jadex.platform.service.message.transport.tcpmtp.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.settings.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.clock.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.message.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.cms.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.df.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.simulation.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.deployment.*</jadex:import>
      <jadex:import>jadex.platform.service.threadpool.*</jadex:import>
      <jadex:import>jadex.platform.service.execution.*</jadex:import>
      <jadex:import>jadex.platform.service.library.*</jadex:import>
      <jadex:import>jadex.platform.service.clock.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.marshal.*</jadex:import>
      <jadex:import>jadex.platform.service.marshal.*</jadex:import>
      <jadex:import>jadex.bridge.service.types.factory.*</jadex:import>
      <jadex:import>jadex.platform.service.df.*</jadex:import>
    </jadex:imports>
    <jadex:arguments>
      <jadex:argument name="configname" type="String">
        <jadex:description>The configuration to use.</jadex:description>
        <jadex:value>&quot;auto&quot;</jadex:value>
      </jadex:argument>
      <jadex:argument name="autoshutdown" type="boolean">
        <jadex:description>Automatically shut down the platform when no user agents are running anymore.</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="adapterfactory" type="Class">
        <jadex:description>Tell the starter to use the standalone adapter factory (usually no need to change).</jadex:description>
        <jadex:value>jadex.platform.service.cms.ComponentAdapterFactory.class</jadex:value>
      </jadex:argument>
      <jadex:argument name="welcome" type="boolean">
        <jadex:description>Tell starter to print welcome message.</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="awareness" type="boolean">
        <jadex:description>Start the awareness agent (awa) for automatic platform discovery.</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="gui" type="boolean">
        <jadex:description>Start the JCC agent to open the platform GUI?</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="saveonexit" type="boolean">
        <jadex:description>Save platform settings on shutdown?</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="simulation" type="boolean">
        <jadex:description>Use simulation execution mode?</jadex:description>
        <jadex:value>false</jadex:value>
      </jadex:argument>
      <jadex:argument name="libpath" type="String[]">
        <jadex:description>Additional library paths (classpath entries) for loading agent models and classes.</jadex:description>
      </jadex:argument>
      <jadex:argument name="tcpport" type="int">
        <jadex:description>Port for TCP transport.</jadex:description>
        <jadex:value>9876</jadex:value>
      </jadex:argument>
      <jadex:argument name="niotcpport" type="int">
        <jadex:description>Port for NIOTCP transport.</jadex:description>
        <jadex:value>8765</jadex:value>
      </jadex:argument>
      <jadex:argument name="awaincludes" type="String">
        <jadex:description>Include entries for awareness agent.</jadex:description>
        <jadex:value>&quot;&quot;</jadex:value>
      </jadex:argument>
      <jadex:argument name="awaexcludes" type="String">
        <jadex:description>Exclude entries for awareness agent.</jadex:description>
        <jadex:value>&quot;&quot;</jadex:value>
      </jadex:argument>
      <jadex:argument name="parametercopy" type="boolean">
        <jadex:description>Flag if copying parameters for local service calls is allowed.</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="niotransport" type="boolean">
        <jadex:description>Flag if nio type or normal tcp transport should be used.</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="logging_level" type="Level">
        <jadex:description>Logging level for platform (default SEVERE).</jadex:description>
        <jadex:value>Level.SEVERE</jadex:value>
      </jadex:argument>
      <jadex:argument name="realtimetimeout" type="boolean">
        <jadex:description>Local timeout mode</jadex:description>
        <jadex:value>true</jadex:value>
      </jadex:argument>
      <jadex:argument name="uniqueids" type="boolean">
        <jadex:description>Do not reuse cids.</jadex:description>
        <jadex:value>false</jadex:value>
      </jadex:argument>
      <jadex:argument name="persist" type="boolean">
        <jadex:description>Enable persistence (requires addon).</jadex:description>
        <jadex:value>false</jadex:value>
      </jadex:argument>
      <jadex:argument name="platformname" type="String">
        <jadex:description>The name of the platform component (null for auto generation).</jadex:description>
        <jadex:value>&quot;jadex&quot;</jadex:value>
      </jadex:argument>
    </jadex:arguments>
    <jadex:providedservices>
      <jadex:providedservice interface="IMarshalService" proxytype="raw" implementation="new MarshalService($component.getExternalAccess())"/>
      <jadex:providedservice interface="jadex.bridge.service.types.context.IContextService" proxytype="decoupled" implementation="jadex.commons.SReflect.isAndroid()\n    ? jadex.platform.service.context.AndroidContextService.class.getConstructor(new Class[]{jadex.bridge.service.IServiceProvider.class}).newInstance(new Object[]{$component})\n    : jadex.platform.service.context.ContextService.class.getConstructor(new Class[]{jadex.bridge.service.IServiceProvider.class}).newInstance(new Object[]{$component})"/>
      <jadex:providedservice interface="ISettingsService" proxytype="decoupled" implementation="new SettingsService()"/>
      <jadex:providedservice interface="jadex.bridge.service.types.threadpool.IThreadPoolService" proxytype="raw" implementation="new ThreadPoolService(new ThreadPool(new DefaultPoolStrategy(0, 20, 30000, 0)), $component)"/>
      <jadex:providedservice interface="jadex.bridge.service.types.threadpool.IDaemonThreadPoolService" proxytype="raw" implementation="new jadex.platform.service.threadpool.ThreadPoolService(\n     new jadex.commons.concurrent.ThreadPool(true, new jadex.commons.DefaultPoolStrategy(0, 20, 30000, 0)), $component)"/>
      <jadex:providedservice interface="IExecutionService" proxytype="raw" implementation="$args.simulation? new SyncExecutionService($component): new AsyncExecutionService($component)"/>
      <jadex:providedservice interface="IDependencyService" proxytype="decoupled" implementation="new BasicDependencyService()"/>
      <jadex:providedservice interface="ILibraryService" proxytype="decoupled" implementation="new LibraryService($args.libpath)"/>
      <jadex:providedservice interface="IClockService" proxytype="raw" implementation="$args.simulation? new ClockService(new ClockCreationInfo(IClock.TYPE_EVENT_DRIVEN, &quot;system_clock&quot;, System.currentTimeMillis(), 100), $component, null): new ClockService(new ClockCreationInfo(IClock.TYPE_SYSTEM, &quot;simulation_clock&quot;, System.currentTimeMillis(), 100), $component, null)"/>
      <jadex:providedservice interface="IMessageService" proxytype="raw" implementation="new jadex.platform.service.message.MessageService($component.getExternalAccess(), $component.getLogger(), new jadex.platform.service.message.transport.ITransport[]{new jadex.platform.service.message.transport.localmtp.LocalTransport($component), new jadex.platform.service.message.transport.niotcpmtp.NIOTCPTransport($component, $args.niotcpport, $component.getLogger())}, new jadex.bridge.service.types.message.MessageType[]{new jadex.bridge.fipa.FIPAMessageType()}, null, jadex.bridge.fipa.SFipa.JADEX_XML, new jadex.platform.service.message.transport.codecs.CodecFactory(), false)"/>
      <jadex:providedservice interface="IComponentManagementService" proxytype="decoupled" implementation="jadex.commons.SReflect.classForName0(&quot;jadex.platform.service.persistence.PersistenceComponentManagementService&quot;,	jadex.platform.service.library.LibraryService.class.getClassLoader())!=null	? jadex.platform.service.persistence.PersistenceComponentManagementService.create($component.getComponentAdapter(), $args.componentfactory, $args.parametercopy, $args.realtimetimeout, $args.persist, $args.uniqueids) : new jadex.platform.service.cms.ComponentManagementService($component.getComponentAdapter(), $args.componentfactory, $args.parametercopy, $args.realtimetimeout, $args.persist, $args.uniqueids)"/>
      <jadex:providedservice interface="IDF" proxytype="decoupled" implementation="new DirectoryFacilitatorService()"/>
      <jadex:providedservice interface="ISimulationService" proxytype="decoupled" implementation="new SimulationService()"/>
      <jadex:providedservice interface="IDeploymentService" proxytype="decoupled" implementation="new DeploymentService()"/>
      <jadex:providedservice interface="jadex.bridge.service.types.security.ISecurityService" proxytype="decoupled" implementation="new jadex.platform.service.security.SecurityService(true, true, true, null, null)"/>
    </jadex:providedservices>
    <jadex:configurations>
      <jadex:configuration name="auto">
        <jadex:argumentvalues>
          <jadex:value name="niotcpport">0</jadex:value>
          <jadex:value name="tcpport">0</jadex:value>
          <jadex:value name="platformname">null</jadex:value>
        </jadex:argumentvalues>
      </jadex:configuration>
    </jadex:configurations>
  </semantic:extension>
  <semantic:process name="Pool" id="_KhTD8Zv9EeCTM9TB44euIw">
    <semantic:extensionElements>
    </semantic:extensionElements>
  </semantic:process>
  <bpmndi:BPMNDiagram>
    <bpmndi:BPMNPlane>
      <bpmndi:BPMNShape bpmnElement="_KhTD8Zv9EeCTM9TB44euIw">
        <dc:Bounds height="600.0" width="3000.0" x="0.0" y="0.0"/>
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</semantic:definitions>

