<!--
	<H3>Context component that exposes the context service</H3>
-->
<componenttype xmlns="http://www.activecomponents.org/jadex-component"
	xmlns:env="http://www.activecomponents.org/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.activecomponents.org/jadex-component 
	                    http://www.activecomponents.org/jadex-component-${jadex_build_version}.xsd"
	name="Context" package="jadex.platform.service.context">
	
	<arguments>
		<argument name="contextserviceclass" class="Class"/>
	</arguments>
	
	<services>
	    <providedservice class="jadex.bridge.service.types.context.IContextService">
	        <implementation>
				$args.contextserviceclass!=null ? jadex.commons.SReflect.classForName0($args.contextserviceclass, jadex.commons.SReflect.class.getClassLoader()).newInstance() : jadex.commons.SReflect.isAndroid() ? jadex.platform.service.context.AndroidContextService.class.getConstructor(new Class[]{jadex.bridge.IComponentIdentifier.class}).newInstance(new Object[]{$component.getComponentIdentifier()}): jadex.platform.service.context.ContextService.class.getConstructor(new Class[]{jadex.bridge.IComponentIdentifier.class}).newInstance(new Object[]{$component.getComponentIdentifier()})	        
			</implementation>
	    </providedservice>
	</services>
	
	<properties>
		<property name="system" class="boolean">true</property>
	</properties>
</componenttype>
